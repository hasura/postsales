config:
scenarios:
  - name: 'JSON variables should not be interpreted as graphql input values'
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_article($body: jsonb) {
                insert_article_one(object: {body: $body}) {
                  body
                }
              }
            variables:
              body:
                1: 2
                2: 3
          capture:
            json: '$.data.insert_article_one.body'
            as: 'insert_article_body'
      - match:
          statusCode: 200
          json:
            insert_article_body:
              1: 2
              2: 3
            
  - name: 'Update author mutation should return an error with null where condition'
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation update_author {
                update_Employee(where: null, _set: {City: ""}) {
                  returning {
                    Address
                    BirthDate
                    City
                  }
                }
              }
          capture:
            json: '$.errors[0].message'
            as: 'update_author_error'
      - match:
          statusCode: 200
          json:
            errors:
              - message: "expected an object for type 'Employee_bool_exp', but found null"
            
  - name: 'Passing null value for nullable type'
    flow:
      - post:
          url: "/"
          json:
            query: | 
              query Album($limit: Int) {
                Album(limit: $limit) {
                  AlbumId
                  Title
                }
              }
          expect:
            - statusCode: 200

  - name: 'Passing null value for non-nullable type with default value'
    flow:
      - post:
          url: "/"
          json:
            query: |
              query Album($limit: Int! = 1) {
                  Album(limit: $limit) {
                    AlbumId
                    Title
                  }
                }
            variables:
              limit: null
          capture:
            json: '$.errors[0].message'
            as: 'passing_null_non_nullable_default_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  code: validation-failed
                  path: "$"
                message: 'null value found for non-nullable type: "Int!"'
                    

  - name: 'Passing null value for non nullable type'
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation update_Album($author_id: Int) {
                update_Album(where: {AlbumId: {_eq: $author_id}}, _set: {Title: ""}) {
                  returning {
                    AlbumId
                    ArtistId
                  }
                }
              }
            variables:
              author_id: null
          capture:
            json: '$.errors[0].message'
            as: 'passing_null_non_nullable_error'
      - match:
          statusCode: 200
          json:
            errors:
              - message: "unexpected null value for type 'Int'"
                extensions:
                  path: "$.selectionSet.update_Album.args.where.AlbumId._eq"
                  code: "validation-failed"


  - name: 'Variable type mismatch in column parser'
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation update_author($name: Int!) {
                update_author(where: {id: {_eq: 0}}, _set: {name: $name}) {
                  returning {
                    id
                    name
                  }
                }
              }
            variables:
              name: "foo"
          capture:
            json: '$.errors[0].message'
            as: 'column_parser_type_mismatch_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.update_author.args._set.name"
                  code: "validation-failed"
                message: "variable 'name' is declared as 'Int!', but used where 'String' is expected"

  - name: 'Variable type mismatch in scalar parser'
    flow:
      - post:
          url: "/"
          json:
            query: |
              query get_author($limit: String) {
                author(limit: $limit) {
                  id
                  name
                }
              }
            variables:
              limit: 42
          capture:
            json: '$.errors[0].message'
            as: 'scalar_parser_type_mismatch_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.author.args.limit"
                  code: "validation-failed"
                message: "variable 'limit' is declared as 'String', but used where 'Int' is expected"


  - name: "Input type coercion is not variable coercion"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation have_misgivings($i: Int) {
                insert_misgivings_one(object: {f: $i}) {
                  i
                }
              }
            variables:
              i: 42
          capture:
            json: '$.errors[0].message'
            as: 'input_type_coercion_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.insert_misgivings_one.args.object.f"
                  code: "validation-failed"
                message: "variable 'i' is declared as 'Int', but used where 'Float' is expected"

  - name: "Variable type mismatch with custom scalar"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($location: geometry) {
                insert_author(objects: {name: "bar", location: $location}) {
                  affected_rows
                }
              }
            variables:
              location:
                - 42
                - 101
          capture:
            json: '$.errors[0].message'
            as: 'custom_scalar_type_mismatch_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.insert_author.args.objects[0].location"
                  code: "validation-failed"
                message: "variable 'location' is declared as 'geometry', but used where 'geography' is expected"    


  - name: "Variable type mismatch: nullable variable at non-nullable location"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($author: author_insert_input) {
                insert_author_one(object: $author) {
                  id
                }
              }
            variables:
              author:
                name: "baz"
                location: null
          capture:
            json: '$.errors[0].message'
            as: 'nullable_variable_non_nullable_location_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.insert_author_one.args.object"
                  code: "validation-failed"
                message: "variable 'author' is declared as 'author_insert_input', but used where 'author_insert_input!' is expected"

  - name: "Variable type match: nullable variable with non-null default at non-nullable location"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($author: author_insert_input = {name: "default"}) {
                insert_author_one(object: $author) {
                  id
                }
              }
            variables:
              author:
                name: "baz"
                location: null
          expect:
            - statusCode: 200
              json:
                data:
                  insert_author_one:
                    id: 1

  - name: "Variable type mismatch: nullable variable with null default at non-nullable location"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($author: author_insert_input = null) {
                insert_author_one(object: $author) {
                  id
                }
              }
            variables:
              author:
                name: "baz"
                location: null
          capture:
            json: '$.errors[0].message'
            as: 'nullable_variable_null_default_error'
      - match:
          statusCode: 200
          json:
            errors:
              - extensions:
                  path: "$.selectionSet.insert_author_one.args.object"
                  code: "validation-failed"
                message: "variable 'author' is declared as 'author_insert_input', but used where 'author_insert_input!' is expected"

  - name: "Variable type match: nullable variable at location with default"
    flow:
      - post:
          url: "/"
          json:
            query: |
              query author_type($includeDeprecated: Boolean) {
                __type(name: "author") {
                  fields(includeDeprecated: $includeDeprecated) {
                    name
                  }
                }
              }
            variables:
              includeDeprecated: false
          expect:
            - statusCode: 200
              json:
                data:
                  __type:
                    fields:
                      - name: "id"
                      - name: "location"
                      - name: "name"


  - name: "Variable type match nullability"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($name: String!) {
                insert_author_one(object: {name: $name}) {
                  id
                }
              }
            variables:
              name: "ct"
          expect:
            - statusCode: 200
              json:
                data:
                  insert_author_one:
                    id: 2

  - name: "Variable type match optional"
    flow:
      - post:
          url: "/"
          json:
            query: |
              mutation insert_author($name: String) {
                insert_author_one(object: {name: $name}) {
                  id
                }
              }
            variables:
              name: "asdfdsfllhjh"
          expect:
            - statusCode: 200
              json:
                data:
                  insert_author_one:
                    id: 3

  - name: "Variable type match default"
    flow:
      - post:
          url: "/"
          json:
            query: |
              query author_type($includeDeprecated: Boolean = false) {
                __type(name: "author") {
                  fields(includeDeprecated: $includeDeprecated) {
                    name
                  }
                }
              }
            variables:
              includeDeprecated: false
          expect:
            - statusCode: 200
              json:
                data:
                  __type:
                    fields:
                      - name: "id"
                      - name: "location"
                      - name: "name"


